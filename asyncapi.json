{
  "asyncapi": "3.0.0",
  "id": "urn:formforge:websocket-api",
  "info": {
    "title": "FormForge RAG WebSocket API",
    "version": "1.0.0",
    "description": "\n# FormForge RAG WebSocket API Documentation\n\nThis WebSocket API provides real-time communication capabilities for the FormForge RAG Server.\nIt uses Socket.IO as the underlying transport protocol for bidirectional, event-based communication.\n\n## Main Features\n\n* Real-time upload progress tracking\n* Upload completion notifications\n* Error reporting for failed uploads\n* Processing status for document ingestion\n* Room-based communication for isolating upload events\n\n## Socket.IO Room Pattern\n\nThe server uses a room-based pattern for delivering targeted events:\n* When joining a room, clients are subscribed to `upload:{uploadId}`\n* All progress events are emitted only to clients in the appropriate room\n* This ensures clients only receive events relevant to their uploads\n\n## Client Integration Example\n\n```javascript\nimport { io } from 'socket.io-client';\n\n// Connect to the WebSocket server\nconst socket = io('http://localhost:3000');\n\n// After starting a file upload and receiving uploadId from the response\nconst uploadId = \"upload-123\";\n\n// Join a specific upload room to receive updates\nsocket.emit('joinUploadRoom', uploadId);\n\n// Listen for progress updates\nsocket.on('uploadProgress', (data) => {\n  console.log(`Upload ${data.uploadId} progress: ${data.percent}%`);\n  updateProgressBar(data.percent);\n});\n\n// Listen for completion\nsocket.on('uploadComplete', (data) => {\n  console.log(`Upload completed: ${data.filename} ready for processing`);\n  showCompletionMessage(data);\n});\n\n// Listen for errors\nsocket.on('uploadError', (data) => {\n  console.error(`Upload error: ${data.error}`);\n  showErrorMessage(data.error);\n});\n\n// Listen for processing events\nsocket.on('processingStart', (data) => {\n  console.log(`Processing started for ${data.totalFiles} files`);\n});\n\nsocket.on('processingProgress', (data) => {\n  console.log(`Processing progress: ${data.percent}%`);\n  updateProcessingBar(data.percent);\n});\n\nsocket.on('processingComplete', (data) => {\n  console.log(`Processing complete: ${data.totalChunks} chunks created`);\n});\n\nsocket.on('processingError', (data) => {\n  console.error(`Processing error: ${data.error}`);\n});\n\n// Leave the room when done\nfunction cleanup() {\n  socket.emit('leaveUploadRoom', uploadId);\n}\n```\n",
    "contact": {
      "name": "FormForge Support",
      "url": "https://formforgerag.example.com/support",
      "email": "support@formforgerag.example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": {
    "production": {
      "host": "api.formforgerag.example.com",
      "protocol": "ws",
      "protocolVersion": "socket.io",
      "description": "Production Socket.IO server"
    },
    "development": {
      "host": "localhost:3000",
      "protocol": "ws",
      "protocolVersion": "socket.io",
      "description": "Development Socket.IO server"
    }
  },
  "defaultContentType": "application/json",
  "channels": {
    "joinUploadRoom": {
      "address": "joinUploadRoom",
      "description": "Channel for joining an upload room to receive notifications for a specific upload. Server creates a room named 'upload:{uploadId}'.",
      "messages": {
        "joinUploadRoomMessage": {
          "name": "JoinUploadRoom Message",
          "description": "The unique upload ID string that identifies which upload room to join",
          "payload": {
            "type": "string",
            "description": "The unique upload ID (server will prepend 'upload:' to create the room name)",
            "example": "upload-1746970014231-z0ecgk2"
          }
        }
      }
    },
    "leaveUploadRoom": {
      "address": "leaveUploadRoom",
      "description": "Channel for leaving an upload room to stop receiving notifications. Leaves the room named 'upload:{uploadId}'.",
      "messages": {
        "leaveUploadRoomMessage": {
          "name": "LeaveUploadRoom Message",
          "description": "The unique upload ID string that identifies which upload room to leave",
          "payload": {
            "type": "string",
            "description": "The unique upload ID (server will prepend 'upload:' to match the room name)",
            "example": "upload-1746970014231-z0ecgk2"
          }
        }
      }
    },
    "disconnect": {
      "address": "disconnect",
      "description": "Channel for the disconnect event.",
      "messages": {
        "disconnectMessage": {
          "name": "Disconnect Message",
          "description": "Message for the disconnect event. No payload is needed for this event."
        }
      }
    },
    "uploadProgress": {
      "address": "uploadProgress",
      "description": "Channel for receiving real-time upload progress updates. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "uploadProgressMessage": {
          "name": "UploadProgress Message",
          "description": "Contains information about the current progress of an upload",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "bytesReceived": {
                "type": "integer",
                "description": "Number of bytes received so far",
                "example": 1048576
              },
              "bytesExpected": {
                "type": "integer",
                "description": "Total number of bytes expected for the complete upload",
                "example": 5242880
              },
              "percent": {
                "type": "integer",
                "description": "Percentage of upload completed (0-100)",
                "minimum": 0,
                "maximum": 100,
                "example": 20
              },
              "completed": {
                "type": "boolean",
                "description": "Whether the upload has completed (will be false during progress events)",
                "example": false
              }
            },
            "required": ["uploadId", "percent"]
          }
        }
      }
    },
    "uploadComplete": {
      "address": "uploadComplete",
      "description": "Channel for receiving upload completion notifications. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "uploadCompleteMessage": {
          "name": "UploadComplete Message",
          "description": "Contains information about a completed upload including processing results",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "message": {
                "type": "string",
                "description": "Success message",
                "example": "File uploaded successfully and ready for processing"
              },
              "filename": {
                "type": "string",
                "description": "Original filename",
                "example": "document.pdf"
              },
              "fileId": {
                "type": "string",
                "description": "ID for the specific file",
                "example": "file-1746970014231-a1b2c3"
              },
              "status": {
                "type": "string",
                "description": "Current file status",
                "example": "uploaded"
              },
              "completed": {
                "type": "boolean",
                "description": "Always true for completion events",
                "example": true
              },
              "bytesReceived": {
                "type": "integer",
                "description": "Final number of bytes received",
                "example": 5242880
              },
              "bytesExpected": {
                "type": "integer",
                "description": "Total bytes expected",
                "example": 5242880
              },
              "percent": {
                "type": "integer",
                "description": "Final percentage (should be 100)",
                "example": 100
              }
            },
            "required": ["uploadId", "message", "completed"]
          }
        }
      }
    },
    "uploadError": {
      "address": "uploadError",
      "description": "Channel for receiving upload error notifications. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "uploadErrorMessage": {
          "name": "UploadError Message",
          "description": "Contains error information about a failed upload",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "error": {
                "type": "string",
                "description": "Error message",
                "example": "File format not supported"
              }
            },
            "required": ["uploadId", "error"]
          }
        }
      }
    },
    "processingStart": {
      "address": "processingStart",
      "description": "Channel for receiving file processing start notifications. Events are emitted to the 'upload:{uploadId}' room when processing begins.",
      "messages": {
        "processingStartMessage": {
          "name": "ProcessingStart Message",
          "description": "Contains information about the start of file processing",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "processingId": {
                "type": "string",
                "description": "Unique ID for this processing job",
                "example": "proc-1746970021896-upload-1746970014231-z0ecgk2"
              },
              "totalFiles": {
                "type": "integer",
                "description": "Total number of files to be processed",
                "example": 1
              },
              "status": {
                "type": "string",
                "description": "Current status of the processing operation",
                "enum": [
                  "analyzing",
                  "processing",
                  "embedding",
                  "file_complete",
                  "complete",
                  "error"
                ],
                "example": "analyzing"
              },
              "message": {
                "type": "string",
                "description": "Human-readable message describing the current processing status",
                "example": "Analyzing 1 files..."
              },
              "files": {
                "type": "array",
                "description": "List of files that will be processed",
                "items": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "ID for the file",
                      "example": "file-1746970014231-a1b2c3"
                    },
                    "filename": {
                      "type": "string",
                      "description": "Original filename",
                      "example": "document.pdf"
                    }
                  }
                }
              }
            },
            "required": ["uploadId", "processingId", "totalFiles"]
          }
        }
      }
    },
    "processingProgress": {
      "address": "processingProgress",
      "description": "Channel for receiving file processing progress updates. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "processingProgressMessage": {
          "name": "ProcessingProgress Message",
          "description": "Contains information about the current progress of file processing and embedding",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "processingId": {
                "type": "string",
                "description": "Unique ID for this processing job",
                "example": "proc-1746970021896-upload-1746970014231-z0ecgk2"
              },
              "currentFile": {
                "type": ["string", "null"],
                "description": "Name of the file currently being processed (null when between files)",
                "example": "document.pdf"
              },
              "fileId": {
                "type": ["string", "null"],
                "description": "ID of the file currently being processed (null when between files)",
                "example": "file-1746970014231-a1b2c3"
              },
              "fileIndex": {
                "type": "integer",
                "description": "Index of the current file in the processing queue (0-based)",
                "example": 0
              },
              "processedFiles": {
                "type": "integer",
                "description": "Number of files processed so far",
                "example": 0
              },
              "totalFiles": {
                "type": "integer",
                "description": "Total number of files to process",
                "example": 1
              },
              "percent": {
                "type": "integer",
                "description": "Overall percentage of processing completed (0-100). This is the field used by the frontend for main progress display.",
                "minimum": 0,
                "maximum": 100,
                "example": 50
              },
              "fileProgress": {
                "type": "integer",
                "description": "Percentage of the current file's processing completed (0-100)",
                "minimum": 0,
                "maximum": 100,
                "example": 75
              },
              "overallProgress": {
                "type": "integer",
                "description": "Percentage of processing completed across all files (0-100). Equivalent to 'percent'.",
                "minimum": 0,
                "maximum": 100,
                "example": 50
              },
              "embeddingProgress": {
                "type": "integer",
                "description": "Percentage of embedding process completed across all chunks (0-100)",
                "minimum": 0,
                "maximum": 100,
                "example": 60
              },
              "currentChunk": {
                "type": "integer",
                "description": "Current chunk being processed in the current file",
                "example": 3
              },
              "totalChunks": {
                "type": "integer",
                "description": "Total number of chunks in the current file",
                "example": 5
              },
              "processedChunks": {
                "type": "integer",
                "description": "Total number of chunks processed so far across all files",
                "example": 10
              },
              "chunkSize": {
                "type": "integer",
                "description": "Size of the current chunk in characters",
                "example": 1000
              },
              "status": {
                "type": "string",
                "description": "Current status of the processing operation",
                "enum": [
                  "analyzing",
                  "processing",
                  "embedding",
                  "file_complete",
                  "complete",
                  "error"
                ],
                "example": "embedding"
              },
              "message": {
                "type": "string",
                "description": "Human-readable message describing the current processing status",
                "example": "Embedding chunk 3/5 of file 1/2: document.pdf"
              }
            },
            "required": ["uploadId", "processedFiles", "totalFiles", "percent"]
          }
        }
      }
    },
    "processingComplete": {
      "address": "processingComplete",
      "description": "Channel for receiving file processing completion notifications. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "processingCompleteMessage": {
          "name": "ProcessingComplete Message",
          "description": "Contains information about completed file processing, including chunk statistics",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "processingId": {
                "type": "string",
                "description": "Unique ID for this processing job",
                "example": "proc-1746970021896-upload-1746970014231-z0ecgk2"
              },
              "processedFiles": {
                "type": "integer",
                "description": "Number of files processed successfully",
                "example": 1
              },
              "totalFiles": {
                "type": "integer",
                "description": "Total number of files attempted",
                "example": 1
              },
              "processedChunks": {
                "type": "integer",
                "description": "Total number of chunks processed",
                "example": 15
              },
              "totalChunks": {
                "type": "integer",
                "description": "Total number of text chunks created",
                "example": 15
              },
              "totalCharacters": {
                "type": "integer",
                "description": "Total number of characters processed",
                "example": 25000
              },
              "overallProgress": {
                "type": "integer",
                "description": "Final processing progress percentage (should be 100)",
                "minimum": 0,
                "maximum": 100,
                "example": 100
              },
              "status": {
                "type": "string",
                "description": "Final status of the processing operation",
                "enum": ["complete", "partial_complete", "error"],
                "example": "complete"
              },
              "message": {
                "type": "string",
                "description": "Human-readable message describing the completion status",
                "example": "Processing completed. Processed 1/1 files with 15 chunks and 25000 characters."
              },
              "results": {
                "type": "array",
                "description": "Detailed results for each processed file",
                "items": {
                  "type": "object",
                  "properties": {
                    "fileId": {
                      "type": "string",
                      "description": "ID for the file",
                      "example": "file-1746970014231-a1b2c3"
                    },
                    "filename": {
                      "type": "string",
                      "description": "Original filename",
                      "example": "document.pdf"
                    },
                    "chunks": {
                      "type": "integer",
                      "description": "Number of chunks created for this file",
                      "example": 15
                    },
                    "totalCharacters": {
                      "type": "integer",
                      "description": "Number of characters in this file",
                      "example": 25000
                    }
                  }
                }
              }
            },
            "required": [
              "uploadId",
              "processingId",
              "processedFiles",
              "totalFiles"
            ]
          }
        }
      }
    },
    "processingError": {
      "address": "processingError",
      "description": "Channel for receiving file processing error notifications. Events are emitted to the 'upload:{uploadId}' room.",
      "messages": {
        "processingErrorMessage": {
          "name": "ProcessingError Message",
          "description": "Contains error information about a failed processing job",
          "payload": {
            "type": "object",
            "properties": {
              "uploadId": {
                "type": "string",
                "description": "Unique ID for the upload",
                "example": "upload-1746970014231-z0ecgk2"
              },
              "processingId": {
                "type": "string",
                "description": "Unique ID for this processing job",
                "example": "proc-1746970021896-upload-1746970014231-z0ecgk2"
              },
              "fileId": {
                "type": ["string", "null"],
                "description": "ID of the file that failed to process (if applicable)",
                "example": "file-1746970014231-a1b2c3"
              },
              "filename": {
                "type": ["string", "null"],
                "description": "Name of the file that failed to process (if applicable)",
                "example": "document.pdf"
              },
              "fileIndex": {
                "type": ["integer", "null"],
                "description": "Index of the file that failed in the processing queue (0-based)",
                "example": 0
              },
              "processedFiles": {
                "type": ["integer", "null"],
                "description": "Number of files processed before the error occurred",
                "example": 0
              },
              "totalFiles": {
                "type": ["integer", "null"],
                "description": "Total number of files in the processing job",
                "example": 1
              },
              "error": {
                "type": "string",
                "description": "Error message",
                "example": "Failed to extract text from PDF"
              },
              "status": {
                "type": "string",
                "description": "Status indicating the error type",
                "enum": ["error", "partial_error"],
                "example": "error"
              },
              "message": {
                "type": "string",
                "description": "Human-readable message describing the error",
                "example": "Error processing file 1/1: document.pdf"
              }
            },
            "required": ["uploadId", "processingId", "error"]
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "socketIoAuth": {
        "type": "userPassword",
        "description": "Socket.IO allows connection authentication through query parameters or headers"
      }
    }
  }
}
